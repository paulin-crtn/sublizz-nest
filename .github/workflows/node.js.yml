name: Node.js CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:

  # label of the container job
  sublizz-test:
    name: Run tests
    # containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: node:latest
    # Define environment variable
    env:
      NODE_ENV: test
      APP_DOMAIN: http://localhost
      APP_PORT: 3333
      DATABASE_URL: postgresql://user:password@localhost:5434/sublizz-test
      ACCESS_JWT_SECRET: access_jwt_secret
      REFRESH_JWT_SECRET: refresh_jwt_secret
      MAIL_HOST: smtp.mailtrap.io
      MAIL_PORT: 2525
      MAIL_USER: user
      MAIL_PASSWORD: password

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_BD: sublizz-test
        ports:
          - 5434:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run Prisma migrations
        run: npx prisma migrate deploy
        # npm run prisma:migrate:test
      - name: Run e2e tests
        run: jest --runInBand --verbose --config ./test/jest-e2e.json
        # npm run test:e2e
